Enrolled100s = 27,
"EA10*Enrolled100s" = 27,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
electedfit$predicted <- predict(newgradfit, newdata = electedfit, type='response')
appointedfit <- with(gg1,
data.frame(EA10 = 0,
Number.Enrolled = 27,
"EA10*Number.Enrolled" = 0,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
appointedfit$predicted <- predict(newgradfit, newdata = appointedfit, type='response')
appointedfit <- with(gg1,
data.frame(EA10 = 0,
Enrolled100s = 27,
"EA10*Number.Enrolled" = 0,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
appointedfit$predicted <- predict(newgradfit, newdata = appointedfit, type='response')
together <- rbind(electedfit, appointedfit)
together <- data.frame(together)
together <- rbind(electedfit, appointedfit)
electedfit <- with(gg1,
data.frame(EA10 = 1,
Enrolled100s = 27,
"EA10*Enrolled100s" = 27,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
electedfit$predicted <- predict(newgradfit, newdata = electedfit, type='response')
appointedfit <- with(gg1,
data.frame(EA10 = 0,
Enrolled100s = 27,
"EA10*Number.Enrolled" = 0,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
appointedfit$predicted <- predict(newgradfit, newdata = appointedfit, type='response')
together <- rbind(electedfit, appointedfit)
appointedfit <- with(gg1,
data.frame(EA10 = 0,
Enrolled100s = 27,
"EA10*Enrolled100s" = 0,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
appointedfit$predicted <- predict(newgradfit, newdata = appointedfit, type='response')
together <- rbind(electedfit, appointedfit)
together <- data.frame(together)
completeclean <- na.omit(cleandata)
aggregate(completeclean$gradrate09, by=list(completeclean$AorE), FUN=mean)
completeclean <- na.omit(cleandata)
cleandata <- gg1[, c("Number.Enrolled",
"NewMean", "EA10", "PovertyPct",
"gradrate09", "StudentTeacherRatio",
"AorE", "MeanAlgebra", "MeanBiology",
"MeanHistory", "MeanEnglish")]
View(gg1)
cleandata <- gg1[, c("Enrolled100s",
"CompositeScore", "EA10", "PovertyPct",
"gradrate09", "StudentTeacherRatio",
"AorE", "MeanAlgebra", "MeanBiology",
"MeanHistory", "MeanEnglish")]
completeclean <- na.omit(cleandata)
aggregate(completeclean$gradrate09, by=list(completeclean$AorE), FUN=mean)
newgradfit2 <- lm(gradrate09 ~ EA10 + Enrolled100s + Enrolled100s:EA10
+ PovertyPct + StudentTeacherRatio, data = completeclean)
summary(newgradfit2)
newgradfit2 <- lm(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, data = completeclean)
summary(newgradfit2)
appointed <- subset(completeclean, AorE == "Appointed")
elected <- subset(completeclean, AorE == "Elected")
simpleappointed <- appointed[,c(1, 2, 4, 5, 6, 8, 9, 10, 11)]
simpleelected <- elected[,c(1, 2, 4, 5, 6, 8, 9, 10, 11)]
simpleclean <- completeclean[,c(1, 2, 4, 5, 6, 7, 8, 9, 10, 11)]
gradvpoverty <- qplot(gradrate09, PovertyPct, data=completeclean)
gradvpoverty
View(appointed)
View(simpleappointed)
enrollmentgradelected <- qplot(Enrolled100s, gradrate09, data = simpleelected)
enrollmentgradelected
enrollmentappointed <- qplot(Enrolled100s, gradrate09, data = simpleappointed)
enrollmentgradappointed <- qplot(Enrolled100s, gradrate09, data = simpleappointed)
enrollmentgradappointed
cor(Enrolled100s, gradrate09)
cor(simpleelected$Enrolled100s, simpleelected$gradrate09)
cor(simpleappointed$Enrolled100s, simpleappointed$gradrate09)
qplot(gradrate09, StudentTeacherRatio, data=cleandata) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=cleandata) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleappointed) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleappointed) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, Enrolled100s, data=simpleappointed) + stat_smooth(method= 'lm')
gradvpoverty + stat_smooth(method = 'lm') + geom_point(aes(color = AorE))
qplot(gradrate09, PovertyPct, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, PovertyPct, data=simpleappointed) + stat_smooth(method= 'lm')
qplot(gradrate09, PovertyPct, data=simpleelected) + stat_smooth(method= 'lm')
aggregate(cleandata$gradrate09, by=list(cleandata$AorE), FUN=mean)
qplot(gradrate09, StudentTeacherRatio, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, StudentTeacherRatio, data=simpleappointed) + stat_smooth(method= 'lm')
qplot(gradrate09, StudentTeacherRatio, data=simpleelected) + stat_smooth(method= 'lm')
qplot(gradrate09, StudentTeacherRatio, data=simpleappointed) + stat_smooth(method= 'lm')
qplot(CompositeScore, Enrolled100s, data=simpleelected) + stat_smooth(method= 'lm')
qplot(CompositeScore, Enrolled100s, data=simpleappointed) + stat_smooth(method= 'lm')
View(simpleclean)
View(simpleclean)
View(simpleappointed)
source('~/Desktop/DataCollab/assignment3/test.R')
electedfitsmall <- with(gg1,
data.frame(EA10 = 1,
Enrolled100s = 10,
"EA10*Enrolled100s" = 27,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
electedfitsmall$predicted <- predict(newgradfit, newdata = electedfitsmall, type='response')
appointedfitsmall <- with(gg1,
data.frame(EA10 = 0,
Enrolled100s = 10,
"EA10*Enrolled100s" = 0,
PovertyPct = 35.1,
StudentTeacherRatio = 14.9))
appointedfitsmall$predicted <- predict(newgradfit, newdata = appointedfitsmall, type='response')
together2 <- rbind(electedfitsmall, appointedfitsmall)
together2 <- data.frame(together2)
View(together2)
source('~/Desktop/DataCollab/assignment3/test.R')
fitted(newgradfit2)
res <- stack(data.frame(Observed = completeclean$gradrate09, Predicted = fitted(newgradfit2)))
res <- cbind(res, x = rep(gradrate09$x, 2))
res <- stack(data.frame(Observed = completeclean$gradrate09, Predicted = fitted(newgradfit2)))
res <- cbind(res, x = rep(completeclean$EA10, 2))
head(res)
xyplot(values ~ x, data = res, group = ind, auto.key = TRUE)
library(lattice)
xyplot(values ~ x, data = res, group = ind, auto.key = TRUE)
res <- stack(data.frame(Observed = completeclean$gradrate09, Predicted = fitted(newgradfit2)))
res <- cbind(res, x = rep(completeclean$Enrolled100s, 2))
xyplot(values ~ x, data = res, group = ind, auto.key = TRUE)
xyplot(y ~ x, data = dat, type = c("p","r"), col.line = "red")
xyplot(y ~ x, data = completeclean, type = c("p","r"), col.line = "red")
xyplot(completeclean$gradrate09 ~ x, data = completeclean, type = c("p","r"), col.line = "red")
xyplot(completeclean$gradrate09 ~ completeclean$Enrolled100s, data = completeclean, type = c("p","r"), col.line = "red")
xyplot(completeclean$gradrate09 ~ completeclean$EA10, data = completeclean, type = c("p","r"), col.line = "red")
xyplot(completeclean$gradrate09 ~ completeclean$PovertyPct, data = completeclean, type = c("p","r"), col.line = "red")
library(relaimpo)
install.packages("relaimpo")
library(relaimpo)
calc.relimp(newgradfit2,type=c("lmg","last","first","pratt"),
rela=TRUE)
boot <- boot.relimp(newgradfit2, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
boot <- boot.relimp(newgradfit2, b = 1000, type = c(
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
boot <- boot.relimp(newgradfit2, b = 1000, type = c( "last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
anova(newgradfit2)
summary(newgradfit2)
anova(newgradfit2)
anova(one)
anova(four)
anova(three)
anova(two)
anova(newmeanfit)
xyplot(values ~ x, data = res, group = ind, auto.key = TRUE)
xyplot(completeclean$gradrate09 ~ completeclean$PovertyPct, data = completeclean, type = c("p","r"), col.line = "red")
xyplot(values ~ x, data = res, group = ind, auto.key = TRUE)
newgradfit2 <- lm(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, data = completeclean)
fitted(newgradfit2)
data.frame(fitted(newgradfit2))
newgradfit2 <- lm(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, data = completeclean)
fitted(newgradfit2)
summary(newgradfit2)
confint(newgradfit2, level=0.90)
source('~/Desktop/DataCollab/assignment3/test.R')
View(gg1)
View(gg1)
View(completeclean)
instal.packages("Zelig")
install.packages("Zelig")
plot(newgradfit2, which =1)
plot(newgradfit2, which =2)
library(Zelig)
xyplot(completeclean$gradrate09 ~ completeclean$PovertyPct, data = completeclean, type = c("p","r"), col.line = "red")
?zelig
help.zelig("models")
Z1 <- zelig(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = completeclean, model = 'lm')
Z1 <- zelig(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = completeclean, model = 'ls')
setZ1 <- setx(Z1, Enrolled100s = 2:190)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 2:190, EA10: 0:1)
setZ1 <- setx(Z1, Enrolled100s = 2:190 + EA10: 0:1)
setZ1 <- setx(Z1, Enrolled100s = 2:190 + EA10 = 0:1)
setZ1 <- setx(Z1, Enrolled100s = 2:190, EA10 = 0:1)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, EA10:Enrolled100s = 0:190)
setZ1 <- setx(Z1, EA10*Enrolled100s = 0:190)
setZ1 <- setx(Z1, EA10*Enrolled100s = 1:190)
setZ1 <- setx(Z1, EA10*Enrolled100s == 0:190)
setZ1 <- setx(Z1, EA10*Enrolled100s = 0:190)
setZ1 <- setx(Z1, Enrolled100s = 0:190)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 0:190)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
plot(simZ1, xlim c(0, 200))
plot(simZ1, xlimc(0, 200))
plot(simZ1, xlim(c(0, 200))
plot(simZ1, xlim(c(0, 200)))
plot(simZ1, xlim=c(0, 200))
setZ1 <- setx(Z1, PovertyPct = 40:90)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 0:50)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 0:200)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 0:500)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 20:90)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, PovertyPct = 20:90)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
setZ1 <- setx(Z1, Enrolled100s = 0:200)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
Z1 <- zelig(gradrate09 ~ EA10 + Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = simpleappointed, model = 'ls')
View(simpleappointed)
Z1 <- zelig(gradrate09 ~ Enrolled100s + EA10*Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = simpleappointed, model = 'ls')
Z1 <- zelig(gradrate09 ~ Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = simpleappointed, model = 'ls')
setZ1 <- setx(Z1, Enrolled100s = 0:200)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
Z2 <- zelig(gradrate09 ~ Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = simpleelected, model = 'ls')
setZ2 <- setx(Z2, Enrolled100s = 0:200)
simZ2 <- sim(Z2, x = setZ1)
plot(simZ2)
plot(simZ1)
plot(simZ2)
ggplot2(simZ1)
qplot(simZ1)
ggplot2(simZ1)
ggplot(simZ1)
plot(simZ1)
Z1 <- zelig(gradrate09 ~ EA10 + EA10:Enrolled100s
+ PovertyPct + StudentTeacherRatio, cite = FALSE,
data = completeclean, model = 'ls')
setZ1 <- setx(Z1, Enrolled100s = 0:200)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
elecappoint <- c(0,1)
extracted <- simZ1$qi
extracted <- data.frame(extracted$ev)
extracted <- melt(extracted, measure = 1:201)
extracted <- melt(extracted, Enrolled100s = 1:201)
extracted <- melt(extracted, measure = 1:201)
View(extracted)
plot(simZ1)
PTsdata <- read.csv("~/Dropbox/Paper Towel/PTs.csv")
wdays <- read.csv("~/Dropbox/Paper Towel/wdays.csv")
#Reformat the data variable
PTsdata$Date <- as.Date(PTsdata$Date, "%m/%d/%Y")
PTsdata$Date1 <- as.character(PTsdata$Date)
#Subset data to remove observations that haven't yet been recorded
incompleteset <- na.omit(PTsdata)
incompeltesetwdays <- na.omit(wdays)
tmp4  <- ggplot(incompeltesetwdays, aes(x=Day, y=(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
PTsdata <- read.csv("~/Dropbox/Paper Towel/PTs.csv")
PTsdata$Date <- as.Date(PTsdata$Date, "%m/%d/%Y")
PTsdata$Date1 <- as.character(PTsdata$Date)
#Subset data to remove observations that haven't yet been recorded
incompleteset <- na.omit(PTsdata)
incompeltesetwdays <- na.omit(wdays)
tmp2 <- ggplot(incompleteset, aes(Day, log(PTs.Used), colour=factor(Gender)))
tmp2 + layer(geom="point") + geom_line(aes(linetype = Gender)) + facet_grid(Bathroom ~ .) +
annotate("text", x = 6.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("text", x = 13.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 20.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 10, y = 4, label = "Males Receive Treatment", size = 5) +
annotate ("text", x = 17, y = 4, label = "Males and Females Receive Treatment", size = 5) +
annotate("rect", xmin = 6, xmax = 7, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 13, xmax = 14, ymin = -Inf, ymax = Inf,
alpha = .2)  +
annotate("rect", xmin = 20, xmax = 21, ymin = -Inf, ymax = Inf,
alpha = .2)
weekdaydata <- subset(incompleteset, Day.Type == "Weekday")
View(weekdaydata)
weekdaydata$daze <- replicate(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18))
source('~/.active-rstudio-document', echo=TRUE)
weekdaydata$daze <- (c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18))
View(weekdaydata)
tmp4  <- ggplot(weekdaydata, aes(x=daze, y=(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
weekdaydata$Days <- (c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18))
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
tmp2 <- ggplot(incompleteset, aes(Day, log(PTs.Used), colour=factor(Gender)))
tmp2 + layer(geom="point") + geom_line(aes(linetype = Gender)) + facet_grid(Bathroom ~ .) +
annotate("text", x = 6.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("text", x = 13.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 20.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 10, y = 4, label = "Males Receive Treatment", size = 5) +
annotate ("text", x = 17, y = 4, label = "Males and Females Receive Treatment", size = 5) +
annotate("rect", xmin = 6, xmax = 7, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 13, xmax = 14, ymin = -Inf, ymax = Inf,
alpha = .2)  +
annotate("rect", xmin = 20, xmax = 21, ymin = -Inf, ymax = Inf,
alpha = .2)
tmp2 <- ggplot(incompleteset, aes(Day, log(PTs.Used), colour=factor(Gender)))
tmp2 + layer(geom="point") + geom_line(aes(linetype = Gender)) + facet_grid(Bathroom ~ .) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))  +
annotate("text", x = 6.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("text", x = 13.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 20.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 10, y = 4, label = "Males Receive Treatment", size = 5) +
annotate ("text", x = 17, y = 4, label = "Males and Females Receive Treatment", size = 5) +
annotate("rect", xmin = 6, xmax = 7, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 13, xmax = 14, ymin = -Inf, ymax = Inf,
alpha = .2)  +
annotate("rect", xmin = 20, xmax = 21, ymin = -Inf, ymax = Inf,
alpha = .2)
means.barplot <- qplot(x=Week, y=mean, fill = Gender, data = meansweekdays,
geom = 'bar', stat = "identity", position = 'dodge')
males <- subset(PTsdata, Gender == "Male")
females <- subset(PTsdata, Gender == "Female")
maleplot <- ggplot(males, aes(Day, PTs.Used))
maleplot + geom_area(position = 'stack', alpha = .5, fill = "red") + layer(geom= "line", color = "red") + facet_grid(Bathroom ~ .)
femaleplot <- ggplot(females, aes(Day, PTs.Used))
femaleplot + geom_area(position = 'stack', alpha = .75, fill = "blue")
+ layer(geom= "line", color = "blue") + facet_grid(Bathroom ~ .)
tmp <- ggplot(weekdaydata, aes(Date, log(PTs.Used), colour=factor(Gender)))
tmp + layer(geom="point") + geom_line() + facet_grid(Bathroom ~ .)
View(PTsWeek1)
group_data <- group_by(PTsdata, Gender + Day)
head(group_data)
describeBy(PTsdata$PTs, PTsdata$Gender)
aggregate(PTsdata$PTs.Used, by=list(PTsdata$Gender, PTsdata$Bathroom), FUN=mean)
bygender <- incompleteset[, by=list(Gender, Day)]
males <- subset(incompleteset, Gender == "Male")
females <- subset(incompleteset, Gender == "Female")
malesweek1 <- subset(males, Week == 1)
malesweek2 <- subset(males, Week == 2)
malesweek3 <- subset(males, Week == 3)
malesweekdays1 <- subset(malesweek1, Day.Type == "Weekday")
malesweekdays2 <- subset(malesweek2, Day.Type == "Weekday")
malesweekdays3 <- subset(malesweek3, Day.Type == "Weekday")
femalesweek1 <- subset(females, Week == 1)
femalesweek2 <- subset(females, Week == 2)
femalesweek3 <- subset(females, Week == 3)
femalesweekdays1 <- subset(femalesweek1, Day.Type == "Weekday")
femalesweekdays2 <- subset(femalesweek2, Day.Type == "Weekday")
femalesweekdays3 <- subset(femalesweek3, Day.Type == "Weekday")
week1 <- subset(incompleteset, Week == 1)
week2 <- subset(incompleteset, Week == 2)
week3 <- subset(incompleteset, Week == 3)
weekdays <- subset(incompleteset, Day.Type == "Weekday")
weekends <- subset(incompleteset, Day.Type == "Weekend")
Bathroom1 <- subset(incompleteset, Bathroom == "Bathroom_1")
Bathroom2 <- subset(incompleteset, Bathroom == "Bathroom_2")
Bathroom3 <- subset(incompleteset, Bathroom == "Bathroom_3")
summary(Bathroom1)
mean(malesweek1$PTs.Used)
mean(femalesweek1$PTs.Used)
mean(malesweek2$PTs.Used)
mean(femalesweek2$PTs.Used)
mean(malesweek3$PTs.Used)
mean(femalesweek3$PTs.Used)
mean(malesweekdays1$PTs.Used)
mean(femalesweekdays1$PTs.Used)
mean(malesweekdays2$PTs.Used)
mean(femalesweekdays2$PTs.Used)
mean(malesweekdays3$PTs.Used)
mean(femalesweekdays3$PTs.Used)
aggregate(malesweek1$PTs.Used, by=list(malesweek1$Bathroom), FUN=mean)
aggregate(femalesweek1$PTs.Used, by=list(femalesweek1$Bathroom), FUN=mean)
aggregate(malesweek2$PTs.Used, by=list(malesweek2$Bathroom), FUN=mean)
aggregate(femalesweek2$PTs.Used, by=list(femalesweek2$Bathroom), FUN=mean)
aggregate(malesweek3$PTs.Used, by=list(malesweek3$Bathroom), FUN=mean)
aggregate(femalesweek3$PTs.Used, by=list(femalesweek3$Bathroom), FUN=mean)
meansweekdays <- ddply(weekdays, c("Gender", "Week"), summarise, mean=mean(PTs.Used))
meansweekends <- ddply(weekends, c("Gender", "Week"), summarise, mean =mean(PTs.Used))
?ddply
means.barplot <- qplot(x=Week, y=mean, fill = Gender, data = meansweekdays,
geom = 'bar', stat = "identity", position = 'dodge')
means.barplot
means.barplot +
annotate("text", x = 0.75, y = 250, label = "282", size = 3.75) +
annotate("text", x = 1.2, y = 300, label = "369", size = 3.75) +
annotate("text", x = 1.8, y = 250, label = "347", size = 3.75) +
annotate("text", x = 2.2, y = 300, label = "355", size = 3.75) +
annotate("text", x = 2.8, y = 250, label = "271", size = 3.75) +
annotate("text", x = 3.2, y = 300, label = "326", size = 3.75)
week4 <- subset(incompleteset, Week == 4)
femalesweek4 <- subset(females, Week == 4)
femalesweekdays4 <- subset(femalesweek4, Day.Type == "Weekday")
malesweekdays4 <- subset(malesweek4, Day.Type == "Weekday")
malesweek4 <- subset(males, Week == 4)
malesweekdays4 <- subset(malesweek4, Day.Type == "Weekday")
mean(malesweekdays4$PTs.Used)
mean(femalesweekdays4$PTs.Used)
mean(malesweekdays3$PTs.Used)
mean(malesweekdays1$PTs.Used)
mean(femalesweek1$PTs.Used)
mean(femalesweekdays1$PTs.Used)
mean(malesweekdays2$PTs.Used)
mean(femalesweekdays2$PTs.Used)
mean(malesweekdays3$PTs.Used)
mean(femalesweekdays3$PTs.Used)
mean(malesweekdays4$PTs.Used)
mean(femalesweekdays4$PTs.Used)
means.barplot +
annotate("text", x = 0.75, y = 250, label = "306", size = 3.75) +
annotate("text", x = 1.2, y = 300, label = "401", size = 3.75) +
annotate("text", x = 1.8, y = 250, label = "377", size = 3.75) +
annotate("text", x = 2.2, y = 300, label = "385", size = 3.75) +
annotate("text", x = 2.8, y = 250, label = "295", size = 3.75) +
annotate("text", x = 3.2, y = 300, label = "354", size = 3.75) +
annotate("text", x = 3.8, y = 250, label = "293", size = 3.75) +
annotate("text", x = 4.2, y = 300, label = "328", size = 3.75)
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
means.barplot +
annotate("text", x = 0.75, y = 250, label = "306", size = 3.75) +
annotate("text", x = 1.2, y = 300, label = "401", size = 3.75) +
annotate("text", x = 1.8, y = 250, label = "377", size = 3.75) +
annotate("text", x = 2.2, y = 300, label = "385", size = 3.75) +
annotate("text", x = 2.8, y = 250, label = "295", size = 3.75) +
annotate("text", x = 3.2, y = 300, label = "354", size = 3.75) +
annotate("text", x = 3.8, y = 250, label = "293", size = 3.75) +
annotate("text", x = 4.2, y = 300, label = "328", size = 3.75)
tmp2 <- ggplot(incompleteset, aes(Day, log(PTs.Used), colour=factor(Gender)))
tmp2 + layer(geom="point") + geom_line(aes(linetype = Gender)) + facet_grid(Bathroom ~ .) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))  +
annotate("text", x = 6.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("text", x = 13.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 20.5, y = 6.4, label = "Weekend", size = 3.75) +
annotate("Text", x = 10, y = 4, label = "Males Receive Treatment", size = 5) +
annotate ("text", x = 17, y = 4, label = "Males and Females Receive Treatment", size = 5) +
annotate("rect", xmin = 6, xmax = 7, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 13, xmax = 14, ymin = -Inf, ymax = Inf,
alpha = .2)  +
annotate("rect", xmin = 20, xmax = 21, ymin = -Inf, ymax = Inf,
alpha = .2)
tmp3 <- ggplot(incompleteset, aes(x=Day, y=(PTs.Used), colour=factor(Gender)))
tmp3 + stat_summary(fun.y =mean, geom = 'point') + stat_summary(fun.y = mean, geom = 'line')
tmp3 <- ggplot(incompleteset, aes(x=Day, y=log(PTs.Used), colour=factor(Gender)))
tmp3 + stat_summary(fun.y =mean, geom = 'point') + stat_summary(fun.y = mean, geom = 'line')
PTsdata <- read.csv("~/Dropbox/Paper Towel/PTs.csv")
wdays <- read.csv("~/Dropbox/Paper Towel/wdays.csv")
#Reformat the data variable
PTsdata$Date <- as.Date(PTsdata$Date, "%m/%d/%Y")
PTsdata$Date1 <- as.character(PTsdata$Date)
#Subset data to remove observations that haven't yet been recorded
incompleteset <- na.omit(PTsdata)
#Subset weekdaydate
weekdaydata <- subset(incompleteset, Day.Type == "Weekday")
tmp3 <- ggplot(incompleteset, aes(x=Day, y=log(PTs.Used), colour=factor(Gender)))
tmp3 + stat_summary(fun.y =mean, geom = 'point') + stat_summary(fun.y = mean, geom = 'line')
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
weekdaydata <- subset(incompleteset, Day.Type == "Weekday")
weekdaydata$Days <- (c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18))
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = median, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
tmp3 <- ggplot(incompleteset, aes(x=Day, y=log(PTs.Used), colour=factor(Gender)))
tmp3 + stat_summary(fun.y =mean, geom = 'point') + stat_summary(fun.y = mean, geom = 'line')
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = mean, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =median, geom = 'point', size =4) + stat_summary(fun.y = mean, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
tmp4  <- ggplot(weekdaydata, aes(x=Days, y=log(PTs.Used), colour=factor(Gender)))
tmp4 + stat_summary(fun.y =mean, geom = 'point', size =4) + stat_summary(fun.y = mean, geom = 'line', size =1.5) +
scale_colour_manual(values = c("#5ab4ac", "#f1a340"))
